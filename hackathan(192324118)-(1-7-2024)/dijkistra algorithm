graph = {
    'A': {'B': 6, 'C': 1},
    'B': {'A': 6, 'C': 2, 'D': 2},
    'C': {'A': 1, 'B': 2, 'D': 1},
    'D': {'B': 2, 'C': 1}
}
distances = {node: float('infinity') for node in graph}
distances['A'] = 0
unvisited = graph.keys()
while unvisited:
    current_node = min(unvisited, key=lambda node: distances[node])
    unvisited.remove(current_node)
 for neighbor, weight in graph[current_node].items():
        new_distance = distances[current_node] + weight
        if new_distance < distances[neighbor]:
            distances[neighbor] = new_distance
distances
